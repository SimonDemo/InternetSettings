os: "WMF 5"

# Scripts that run after cloning
install: 
    - cinst -y pester
    - git clone https://github.com/PowerShell/DscResource.Tests

# Script to prepare for test 
build_script:
    - ps: |
        #$stagingDirectory = (Resolve-Path ..).Path
        # Build new module manifest
        $ModuleVersion = if($Env:APPVEYOR_REPO_TAG -eq 'true')
        {
            $Env:APPVEYOR_REPO_TAG_NAME
        }
        else{
            '0.{0}' -f $ENV:APPVEYOR_BUILD_VERSION
        }
        $Params = @{
            ModuleVersion = $ModuleVersion
            GUID = 'ec680c47-4189-47a4-8273-69c2d4b6f7c7'
            Author = 'Simon Wahlin'
            CompanyName = 'Knowledge Factory'
            Copyright = '(c) 2015 Simon Wahlin. All rights reserved.'
            Description = 'Contains the ZoneSite resource, which adds or removes sites from zones for the current user in Internet Exporer Internet Settings.'
            FunctionsToExport = '*'
            CmdletsToExport = '*'
            VariablesToExport = '*'
            AliasesToExport = '*'
            Tags = @('Internet', 'Explorer','Settings','DSC','Trusted', 'Sites','Local', 'Intranet', 'PSModule')
            LicenseUri = 'https://github.com/SimonWahlin/InternetSettings/blob/master/LICENSE.md'
            ProjectUri = 'https://github.com/SimonWahlin/InternetSettings'
            ReleaseNotes = ($Env:APPVEYOR_REPO_COMMIT_MESSAGE, $Env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED -join "`n")
        }
        New-ModuleManifest -Path '.\InternetSettings.psd1' @Params        
        Push-AppveyorArtifact '.\InternetSettings.psd1'
    
# Custom test phase  
test_script:
    - ps: |
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        Push-AppveyorArtifact $testResultsFile
        if ($res.FailedCount -gt 0) { 
            throw "$($res.FailedCount) tests failed."
        }



# Custom deploy phase
deploy_script:
    - ps: |
        if($Env:APPVEYOR_REPO_TAG -eq 'true')
        {
            
            if(Get-Command -Name Get-PackageProvider -ErrorAction SilentlyContinue)
            {
                Get-PackageProvider -Name NuGet -ForceBootstrap
                #Publish-Module -Name InternetSettings -NuGetApiKey $Env:PSGKey
            }
            else
            {
                'PSGallery not supported'
            }
        }
        else{
            "Commit is not a tag, skipping deploy!"
        }